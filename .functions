hash git &>/dev/null;
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@";
	}
fi;

function findfile() {
	find . -iname "$@";
}

system_uname=$( uname )                                                                                                                                               
case $system_uname in
  Linux)
      function findstring() {
        grep -ri "$@";
      }
    ;;
  Darwin)
      function findstring() {
        grep -ri "$@" *;
      }
    ;;
  *)
    ;;
esac

find_git_branch() {
  local branch
  if branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null); then
    if [[ "$branch" == "HEAD" ]]; then
      branch='detached'
    fi  
    git_branch="$branch"
  else
    git_branch=""
  fi  
}

find_prompt_git_branch() {
  find_git_branch
  if [[ "$git_branch" != "" ]]; then
    prompt_git_branch=" ($git_branch)"
  else
    prompt_git_branch=""
  fi  
}

find_git_dirty() {
  local status=$(git status --porcelain 2> /dev/null)
  if [[ "$git_branch" == "(detached)" ]]; then
    status="dirty"
  fi  
  if [[ "$status" != "" ]]; then
    git_dirty='*'
  else
    git_dirty=''
  fi  
}

function grc() {
	git rebase --onto $1~1 $1
}

function gp() {
  find_git_branch
  git push -u origin $git_branch
}

function gpf() {
  find_git_branch
  git push -u origin $git_branch --force
}

function gca() {
  for i in {1.."$1"}; do git commit --amend --no-edit; done
}

function cheats() {
  if [[ $# -gt 0 ]]; then
    cat ~/dotfiles/.cheats | grep -i $1
  else
    cat ~/dotfiles/.cheats
  fi
}

falcon() {
  if [[ $1 == *"dev"* ]]; then
    echo "Aloha"
  fi
  if [[ $1 == *"esvc"* || $1 == *"prod"* || $1 == *"stage"* ]]; then
    echo "Matlock + yubikey"
  fi
  ssh -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null d.greer@bastion.syssec.foundation.$1.aws.sfdc.cl
}

falcon_scp() {
  scp -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $2 d.greer@bastion.syssec.foundation.$1.aws.sfdc.cl:~/$2
}

kupdate() {
  aws sts get-caller-identity
  aws eks --region $1 update-kubeconfig --name $3
  kubectl get pods -n $2
}

importrealms() {
  kubectl create job --from=cronjob/quantumk-keycloak-sp-onboarder -n quantumk importjob
  sleep 8
  kubectl get pods -n quantumk | grep -i importjob | kubectl logs -f -n quantumk -c keycloak-sp-onboarder $(awk '{print $1}')
  kubectl delete job importjob -n quantumk
}

vaultlogin() {
  echo "Ensure you have exported PCSK creds."
  export VAULT_CACERT=/home/d.greer/dev/dynamic-keytool/src/test/resources/cacerts.pem
  export QUANTUMK_CA_CERT_FILE=$VAULT_CACERT
  export QUANTUMK_VAULT_ROLE=371972397426-iam-quantumk
  export ENV_SECRET_SERVICE_HOSTNAME=https://api.vault.secrets.fdev1-uswest2.aws.sfdc.cl
  export AWS_LOGIN_HEADER=$(echo $ENV_SECRET_SERVICE_HOSTNAME|awk -F: '{print $2}'|sed 's/\///g')
  export VAULT_TOKEN=$(vault login -token-only -address=$ENV_SECRET_SERVICE_HOSTNAME -method=aws header_value=$AWS_LOGIN_HEADER role=$QUANTUMK_VAULT_ROLE)
  export VAULT_ADDR=https://api.vault.secrets.fdev1-uswest2.aws.sfdc.cl
  export IAC_FALCON_INSTANCE=fdev1-uswest2
  vault kv list kv/v2/371972397426/quantumk
}

kubecp() {
  echo "Copying sp_importer"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/sp_importer.py $1:/opt/quantumk/keycloak/sp_importer.py -n $2 -c keycloak
  echo "Copying defaults"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/defaults.py $1:/opt/quantumk/keycloak/defaults.py -n $2 -c keycloak
  echo "Copying AwsVaultReader"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/kst/providers/secrets/vault/AwsVaultReader.py $1:/opt/quantumk/keycloak/kst/providers/secrets/vault/AwsVaultReader.py -n $2 -c keycloak
  echo "Copying HashicorpVaultReader"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/kst/providers/secrets/vault/HashicorpVaultReader.py $1:/opt/quantumk/keycloak/kst/providers/secrets/vault/HashicorpVaultReader.py -n $2 -c keycloak
  echo "Copying secret_helper"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/secret_helper.py $1:/opt/quantumk/keycloak/secret_helper.py -n $2 -c keycloak
  echo "Copying sp_utils"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/sp_utils/sp_utils.py $1:/opt/quantumk/keycloak/sp_utils/sp_utils.py -n $2 -c keycloak
  echo "Copying share_secrets"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/sp_utils/share_secrets.py $1:/opt/quantumk/keycloak/sp_utils/share_secrets.py -n $2 -c keycloak
  echo "Copying sp_utils init"
  kubectl cp /home/d.greer/dev/keycloak_docker_tng/keycloak/sp_utils/__init__.py $1:/opt/quantumk/keycloak/sp_utils/__init__.py -n $2 -c keycloak
  echo "sshing"
  kubectl exec -it $1 -n quantumk -c keycloak -- /opt/quantumk/keycloak/sp_importer.py --proto
}
